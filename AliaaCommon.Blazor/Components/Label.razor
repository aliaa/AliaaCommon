@using System.Reflection
@using System.Linq.Expressions

<label for="@memberName" class="@Classes">@displayName @ChildContent</label>

@code {
    [Parameter]
    public Expression<Func<object>> For { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool FontBold { get; set; }

    [Parameter]
    public string Class { get; set; }

    private string displayName;
    private string memberName;

    private string Classes
    {
        get
        {
            string res = "form-label " + Class;
            if (FontBold)
                res += " font-weight-bold fw-bold";
            return res;
        }
    }

    protected override void OnInitialized()
    {
        MemberInfo memberInfo;
        if (For.Body is MemberExpression mex)
            memberInfo = mex.Member;
        else if (For.Body is UnaryExpression uex)
            memberInfo = (uex.Operand as MemberExpression).Member;
        else
            throw new NotImplementedException();
        memberName = memberInfo.Name;
        displayName = DisplayUtils.DisplayName(memberInfo);
    }

}